kube-prometheus-stack:

  alertmanager:
    enabled: false

  grafana:
    enabled: true
    ingress:
      enabled: true
      ingressClassName: nginx-private
      hosts:
        - grafana.colfax.int
      path: /
    env:
      PUID: "1002"
      PGID: "1003"
      GF_SECURITY_ADMIN_PASSWORD__FILE: "goodness"
    persistence:
      enabled: true
      existingClaim: grafana-store
    initChownData:
      enabled: false
    # serviceMonitor:
    #   additionalLabels:
    #     prometheus: prometheus

  prometheus:
    ingress:
      enabled: true
      ingressClassName: nginx-private
      hosts:
        - prometheus.colfax.int
      path: /
    # serviceMonitor:
    #   additionalLabels:
    #     prometheus: prometheus
    prometheusSpec:
      retention: 30d
      storageSpec: 
        volumeClaimTemplate:
          spec:
            storageClassName: nfs-client
            accessModes: ["ReadWriteOnce"]
            resources:
              requests:
                storage: 10Gi
      # serviceMonitorSelector:
      #   matchLabels:
      #     prometheus: prometheus
      additionalScrapeConfigs:
      - job_name: "green-machine"
        static_configs:
          - targets: [192.168.50.6:9100]
      - job_name: colfax
        static_configs:
          - targets: [192.168.50.50:9100]
      - job_name: emby
        static_configs:
          - targets: [192.168.50.6:9210]
      - job_name: nginx-public
        static_configs:
          - targets: [ingresspublic-ingress-nginx-controller-metrics.ingress-public.svc.cluster.local:10254]

  # prometheus-node-exporter:
  #   serviceMonitor:
  #     additionalLabels:
  #       prometheus: prometheus

  # kube-state-metrics:
  #   serviceMonitor:
  #     additionalLabels:
  #       prometheus: prometheus

  # kubeScheduler:
  #   serviceMonitor:
  #     additionalLabels:
  #       prometheus: prometheus

  # kubernetesServiceMonitors:
  #   serviceMonitor:
  #     additionalLabels:
  #       prometheus: prometheus

  # kubeControllerManager:
  #   serviceMonitor:
  #     additionalLabels:
  #       prometheus: prometheus

  # kubeApiServer:
  #   serviceMonitor:
  #     additionalLabels:
  #       prometheus: prometheus

  # kubelet:
  #   serviceMonitor:
  #     additionalLabels:
  #       prometheus: prometheus

  # coreDns:
  #   serviceMonitor:
  #     additionalLabels:
  #       prometheus: prometheus

  # kubeDns:
  #   serviceMonitor:
  #     additionalLabels:
  #       prometheus: prometheus

  # kubeEtcd:
  #   serviceMonitor:
  #     additionalLabels:
  #       prometheus: prometheus

  # kubeScheduler:
  #   serviceMonitor:
  #     additionalLabels:
  #       prometheus: prometheus

  # kubeProxy:
  #   serviceMonitor:
  #     additionalLabels:
  #       prometheus: prometheus

  # kubeletService:
  #   serviceMonitor:
  #     additionalLabels:
  #       prometheus: prometheus
